import { Math } from 'angular2/src/facade/math';
export class Statistic {
    static calculateCoefficientOfVariation(sample, mean) {
        return Statistic.calculateStandardDeviation(sample, mean) / mean * 100;
    }
    static calculateMean(samples) {
        var total = 0;
        // TODO: use reduce
        samples.forEach(x => total += x);
        return total / samples.length;
    }
    static calculateStandardDeviation(samples, mean) {
        var deviation = 0;
        // TODO: use reduce
        samples.forEach(x => deviation += Math.pow(x - mean, 2));
        deviation = deviation / (samples.length);
        deviation = Math.sqrt(deviation);
        return deviation;
    }
    static calculateRegressionSlope(xValues, xMean, yValues, yMean) {
        // See http://en.wikipedia.org/wiki/Simple_linear_regression
        var dividendSum = 0;
        var divisorSum = 0;
        for (var i = 0; i < xValues.length; i++) {
            dividendSum += (xValues[i] - xMean) * (yValues[i] - yMean);
            divisorSum += Math.pow(xValues[i] - xMean, 2);
        }
        return dividendSum / divisorSum;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGlzdGljLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYmVuY2hwcmVzcy9zcmMvc3RhdGlzdGljLnRzIl0sIm5hbWVzIjpbIlN0YXRpc3RpYyIsIlN0YXRpc3RpYy5jYWxjdWxhdGVDb2VmZmljaWVudE9mVmFyaWF0aW9uIiwiU3RhdGlzdGljLmNhbGN1bGF0ZU1lYW4iLCJTdGF0aXN0aWMuY2FsY3VsYXRlU3RhbmRhcmREZXZpYXRpb24iLCJTdGF0aXN0aWMuY2FsY3VsYXRlUmVncmVzc2lvblNsb3BlIl0sIm1hcHBpbmdzIjoiT0FBTyxFQUFDLElBQUksRUFBQyxNQUFNLDBCQUEwQjtBQUU3QztJQUNFQSxPQUFPQSwrQkFBK0JBLENBQUNBLE1BQU1BLEVBQUVBLElBQUlBO1FBQ2pEQyxNQUFNQSxDQUFDQSxTQUFTQSxDQUFDQSwwQkFBMEJBLENBQUNBLE1BQU1BLEVBQUVBLElBQUlBLENBQUNBLEdBQUdBLElBQUlBLEdBQUdBLEdBQUdBLENBQUNBO0lBQ3pFQSxDQUFDQTtJQUVERCxPQUFPQSxhQUFhQSxDQUFDQSxPQUFpQkE7UUFDcENFLElBQUlBLEtBQUtBLEdBQUdBLENBQUNBLENBQUNBO1FBQ2RBLG1CQUFtQkE7UUFDbkJBLE9BQU9BLENBQUNBLE9BQU9BLENBQUNBLENBQUNBLElBQUlBLEtBQUtBLElBQUlBLENBQUNBLENBQUNBLENBQUNBO1FBQ2pDQSxNQUFNQSxDQUFDQSxLQUFLQSxHQUFHQSxPQUFPQSxDQUFDQSxNQUFNQSxDQUFDQTtJQUNoQ0EsQ0FBQ0E7SUFFREYsT0FBT0EsMEJBQTBCQSxDQUFDQSxPQUFpQkEsRUFBRUEsSUFBSUE7UUFDdkRHLElBQUlBLFNBQVNBLEdBQUdBLENBQUNBLENBQUNBO1FBQ2xCQSxtQkFBbUJBO1FBQ25CQSxPQUFPQSxDQUFDQSxPQUFPQSxDQUFDQSxDQUFDQSxJQUFJQSxTQUFTQSxJQUFJQSxJQUFJQSxDQUFDQSxHQUFHQSxDQUFDQSxDQUFDQSxHQUFHQSxJQUFJQSxFQUFFQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUN6REEsU0FBU0EsR0FBR0EsU0FBU0EsR0FBR0EsQ0FBQ0EsT0FBT0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsQ0FBQ0E7UUFDekNBLFNBQVNBLEdBQUdBLElBQUlBLENBQUNBLElBQUlBLENBQUNBLFNBQVNBLENBQUNBLENBQUNBO1FBQ2pDQSxNQUFNQSxDQUFDQSxTQUFTQSxDQUFDQTtJQUNuQkEsQ0FBQ0E7SUFFREgsT0FBT0Esd0JBQXdCQSxDQUFDQSxPQUFpQkEsRUFBRUEsS0FBYUEsRUFBRUEsT0FBaUJBLEVBQ25EQSxLQUFhQTtRQUMzQ0ksNERBQTREQTtRQUM1REEsSUFBSUEsV0FBV0EsR0FBR0EsQ0FBQ0EsQ0FBQ0E7UUFDcEJBLElBQUlBLFVBQVVBLEdBQUdBLENBQUNBLENBQUNBO1FBQ25CQSxHQUFHQSxDQUFDQSxDQUFDQSxHQUFHQSxDQUFDQSxDQUFDQSxHQUFHQSxDQUFDQSxFQUFFQSxDQUFDQSxHQUFHQSxPQUFPQSxDQUFDQSxNQUFNQSxFQUFFQSxDQUFDQSxFQUFFQSxFQUFFQSxDQUFDQTtZQUN4Q0EsV0FBV0EsSUFBSUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsS0FBS0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsT0FBT0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsS0FBS0EsQ0FBQ0EsQ0FBQ0E7WUFDM0RBLFVBQVVBLElBQUlBLElBQUlBLENBQUNBLEdBQUdBLENBQUNBLE9BQU9BLENBQUNBLENBQUNBLENBQUNBLEdBQUdBLEtBQUtBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBO1FBQ2hEQSxDQUFDQTtRQUNEQSxNQUFNQSxDQUFDQSxXQUFXQSxHQUFHQSxVQUFVQSxDQUFDQTtJQUNsQ0EsQ0FBQ0E7QUFDSEosQ0FBQ0E7QUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TWF0aH0gZnJvbSAnYW5ndWxhcjIvc3JjL2ZhY2FkZS9tYXRoJztcblxuZXhwb3J0IGNsYXNzIFN0YXRpc3RpYyB7XG4gIHN0YXRpYyBjYWxjdWxhdGVDb2VmZmljaWVudE9mVmFyaWF0aW9uKHNhbXBsZSwgbWVhbikge1xuICAgIHJldHVybiBTdGF0aXN0aWMuY2FsY3VsYXRlU3RhbmRhcmREZXZpYXRpb24oc2FtcGxlLCBtZWFuKSAvIG1lYW4gKiAxMDA7XG4gIH1cblxuICBzdGF0aWMgY2FsY3VsYXRlTWVhbihzYW1wbGVzOiBudW1iZXJbXSkge1xuICAgIHZhciB0b3RhbCA9IDA7XG4gICAgLy8gVE9ETzogdXNlIHJlZHVjZVxuICAgIHNhbXBsZXMuZm9yRWFjaCh4ID0+IHRvdGFsICs9IHgpO1xuICAgIHJldHVybiB0b3RhbCAvIHNhbXBsZXMubGVuZ3RoO1xuICB9XG5cbiAgc3RhdGljIGNhbGN1bGF0ZVN0YW5kYXJkRGV2aWF0aW9uKHNhbXBsZXM6IG51bWJlcltdLCBtZWFuKSB7XG4gICAgdmFyIGRldmlhdGlvbiA9IDA7XG4gICAgLy8gVE9ETzogdXNlIHJlZHVjZVxuICAgIHNhbXBsZXMuZm9yRWFjaCh4ID0+IGRldmlhdGlvbiArPSBNYXRoLnBvdyh4IC0gbWVhbiwgMikpO1xuICAgIGRldmlhdGlvbiA9IGRldmlhdGlvbiAvIChzYW1wbGVzLmxlbmd0aCk7XG4gICAgZGV2aWF0aW9uID0gTWF0aC5zcXJ0KGRldmlhdGlvbik7XG4gICAgcmV0dXJuIGRldmlhdGlvbjtcbiAgfVxuXG4gIHN0YXRpYyBjYWxjdWxhdGVSZWdyZXNzaW9uU2xvcGUoeFZhbHVlczogbnVtYmVyW10sIHhNZWFuOiBudW1iZXIsIHlWYWx1ZXM6IG51bWJlcltdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHlNZWFuOiBudW1iZXIpIHtcbiAgICAvLyBTZWUgaHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9TaW1wbGVfbGluZWFyX3JlZ3Jlc3Npb25cbiAgICB2YXIgZGl2aWRlbmRTdW0gPSAwO1xuICAgIHZhciBkaXZpc29yU3VtID0gMDtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHhWYWx1ZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGRpdmlkZW5kU3VtICs9ICh4VmFsdWVzW2ldIC0geE1lYW4pICogKHlWYWx1ZXNbaV0gLSB5TWVhbik7XG4gICAgICBkaXZpc29yU3VtICs9IE1hdGgucG93KHhWYWx1ZXNbaV0gLSB4TWVhbiwgMik7XG4gICAgfVxuICAgIHJldHVybiBkaXZpZGVuZFN1bSAvIGRpdmlzb3JTdW07XG4gIH1cbn1cbiJdfQ==