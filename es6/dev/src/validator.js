import { bind } from 'angular2/src/core/di';
import { BaseException } from 'angular2/src/facade/exceptions';
/**
 * A Validator calculates a valid sample out of the complete sample.
 * A valid sample is a sample that represents the population that should be observed
 * in the correct way.
 */
export class Validator {
    static bindTo(delegateToken) {
        return [bind(Validator).toFactory((delegate) => delegate, [delegateToken])];
    }
    /**
     * Calculates a valid sample out of the complete sample
     */
    validate(completeSample) { throw new BaseException('NYI'); }
    /**
     * Returns a Map that describes the properties of the validator
     * (e.g. sample size, ...)
     */
    describe() { throw new BaseException('NYI'); }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFsaWRhdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYmVuY2hwcmVzcy9zcmMvdmFsaWRhdG9yLnRzIl0sIm5hbWVzIjpbIlZhbGlkYXRvciIsIlZhbGlkYXRvci5iaW5kVG8iLCJWYWxpZGF0b3IudmFsaWRhdGUiLCJWYWxpZGF0b3IuZGVzY3JpYmUiXSwibWFwcGluZ3MiOiJPQUFPLEVBQUMsSUFBSSxFQUFvQixNQUFNLHNCQUFzQjtPQUNyRCxFQUFDLGFBQWEsRUFBbUIsTUFBTSxnQ0FBZ0M7QUFJOUU7Ozs7R0FJRztBQUNIO0lBQ0VBLE9BQU9BLE1BQU1BLENBQUNBLGFBQWFBO1FBQ3pCQyxNQUFNQSxDQUFDQSxDQUFDQSxJQUFJQSxDQUFDQSxTQUFTQSxDQUFDQSxDQUFDQSxTQUFTQSxDQUFDQSxDQUFDQSxRQUFRQSxLQUFLQSxRQUFRQSxFQUFFQSxDQUFDQSxhQUFhQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtJQUM5RUEsQ0FBQ0E7SUFFREQ7O09BRUdBO0lBQ0hBLFFBQVFBLENBQUNBLGNBQStCQSxJQUFxQkUsTUFBTUEsSUFBSUEsYUFBYUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFFOUZGOzs7T0FHR0E7SUFDSEEsUUFBUUEsS0FBMkJHLE1BQU1BLElBQUlBLGFBQWFBLENBQUNBLEtBQUtBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO0FBQ3RFSCxDQUFDQTtBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtiaW5kLCBwcm92aWRlLCBQcm92aWRlcn0gZnJvbSAnYW5ndWxhcjIvc3JjL2NvcmUvZGknO1xuaW1wb3J0IHtCYXNlRXhjZXB0aW9uLCBXcmFwcGVkRXhjZXB0aW9ufSBmcm9tICdhbmd1bGFyMi9zcmMvZmFjYWRlL2V4Y2VwdGlvbnMnO1xuXG5pbXBvcnQge01lYXN1cmVWYWx1ZXN9IGZyb20gJy4vbWVhc3VyZV92YWx1ZXMnO1xuXG4vKipcbiAqIEEgVmFsaWRhdG9yIGNhbGN1bGF0ZXMgYSB2YWxpZCBzYW1wbGUgb3V0IG9mIHRoZSBjb21wbGV0ZSBzYW1wbGUuXG4gKiBBIHZhbGlkIHNhbXBsZSBpcyBhIHNhbXBsZSB0aGF0IHJlcHJlc2VudHMgdGhlIHBvcHVsYXRpb24gdGhhdCBzaG91bGQgYmUgb2JzZXJ2ZWRcbiAqIGluIHRoZSBjb3JyZWN0IHdheS5cbiAqL1xuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFZhbGlkYXRvciB7XG4gIHN0YXRpYyBiaW5kVG8oZGVsZWdhdGVUb2tlbik6IFByb3ZpZGVyW10ge1xuICAgIHJldHVybiBbYmluZChWYWxpZGF0b3IpLnRvRmFjdG9yeSgoZGVsZWdhdGUpID0+IGRlbGVnYXRlLCBbZGVsZWdhdGVUb2tlbl0pXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDYWxjdWxhdGVzIGEgdmFsaWQgc2FtcGxlIG91dCBvZiB0aGUgY29tcGxldGUgc2FtcGxlXG4gICAqL1xuICB2YWxpZGF0ZShjb21wbGV0ZVNhbXBsZTogTWVhc3VyZVZhbHVlc1tdKTogTWVhc3VyZVZhbHVlc1tdIHsgdGhyb3cgbmV3IEJhc2VFeGNlcHRpb24oJ05ZSScpOyB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgYSBNYXAgdGhhdCBkZXNjcmliZXMgdGhlIHByb3BlcnRpZXMgb2YgdGhlIHZhbGlkYXRvclxuICAgKiAoZS5nLiBzYW1wbGUgc2l6ZSwgLi4uKVxuICAgKi9cbiAgZGVzY3JpYmUoKToge1trZXk6IHN0cmluZ106IGFueX0geyB0aHJvdyBuZXcgQmFzZUV4Y2VwdGlvbignTllJJyk7IH1cbn1cbiJdfQ==